/*
 * Copyright 2015, 2016 Priit Laes
 *
 * Priit Laes <plaes@plaes.org>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun4i-a10.dtsi"
#include "sunxi-common-regulators.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "Gemei G9 Tablet";
	compatible = "gemei,g9", "allwinner,sun4i-a10";

	/*
	 * TODO:
	 *   2x cameras via CSI
	 *   AXP battery management
	 *   NAND
	 *   OTG
	 *   Touchscreen - gt801_2plus1 @ i2c adapter 2 @ 0x48
	 *   Panel backlight (PH7) and PWM (PB2)
	 *   HDMI output
	 */

	aliases {
		serial0 = &uart0;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	panel: panel {
		/* TODO: Backlight PWM (PB2) */
		/* TODO: Specify that output is LVDS */
		compatible = "lg,lp097x02-slq2";
		pinctrl-names = "default";
		pinctrl-0 = <&lcd_backlight_pin>, <&lcd_enable_pin>, <&lcd_lvds0_pins>;
		enable-gpios =
			<&pio 7 8 GPIO_ACTIVE_HIGH>,  /* Power (PH8) */
			<&pio 7 7 GPIO_ACTIVE_HIGH>;  /* Backlight (PH7) */
		#address-cells = <1>;
		#size-cells = <0>;

		port {
			#address-cells = <1>;
			#size-cells = <0>;

			panel_input: endpoint {
				remote-endpoint = <&tcon0_out_panel>;
			};
		};
	};

	tcon0: lcd-controller@1c0c000 {
		compatible = "allwinner,sun5i-a13-tcon";
		reg = <0x01c0c000 0x1000>;
		interrupts = <44>;
		resets = <&tcon0_ch0_clk 1>;
		reset-names = "lcd";
		clocks = <&ahb_gates 36>,
		         <&tcon0_ch0_clk>,
		         <&tcon0_ch1_clk>;
		clock-names = "ahb",
		              "tcon-ch0",
		              "tcon-ch1";
		clock-output-names = "tcon-pixel-clock";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			tcon0_in: port@0 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0>;

				tcon0_in_be0: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&be0_out_tcon0>;
				};
			};

			tcon0_out: port@1 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <1>;

				tcon0_out_panel: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&panel_input>;
				};
			};
		};
	};

	fe0: display-frontend@1e00000 {
		compatible = "allwinner,sun5i-a13-display-frontend";
		reg = <0x01e00000 0x20000>;
		interrupts = <47>;
		clocks = <&ahb_gates 46>, <&de_fe0_clk>,
		         <&dram_gates 25>;
		clock-names = "ahb", "mod",
		              "ram";
		resets = <&de_fe0_clk>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			fe0_out: port@1 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <1>;

				fe0_out_be0: endpoint {
					remote-endpoint = <&be0_in_fe0>;
				};
			};
		};
	};

	be0: display-backend@1e60000 {
		compatible = "allwinner,sun5i-a13-display-backend";
		reg = <0x01e60000 0x10000>;
		clocks = <&ahb_gates 44>, <&de_be0_clk>,
		         <&dram_gates 26>;
		clock-names = "ahb", "mod",
		              "ram";
		resets = <&de_be0_clk>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			be0_in: port@0 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0>;

				be0_in_fe0: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&fe0_out_be0>;
				};
			};

			be0_out: port@1 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <1>;

				be0_out_tcon0: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&tcon0_in_be0>;
				};
			};
		};
	};

	display-engine {
		compatible = "allwinner,sun5i-a13-display-engine";
		allwinner,pipelines = <&fe0>;
	};
};

&codec {
	/* PH15 controls power to external amplifier (ft2012q) */
	pinctrl-names = "default";
	pinctrl-0 = <&codec_pa_pin>;
	allwinner,pa-gpios = <&pio 7 15 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&cpu0 {
	cpu-supply = <&reg_dcdc2>;
};

&ehci0 {
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins_a>;
	status = "okay";

	axp209: pmic@34 {
		reg = <0x34>;
		interrupts = <0>;
	};
};

#include "axp209.dtsi"

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins_a>;
	status = "okay";

	/* Accelerometer */
	bma250@18 {
		compatible = "bosch,bma250";
		reg = <0x18>;
		interrupt-parent = <&pio>;
		interrupts = <7 0 IRQ_TYPE_EDGE_RISING>; /* PH00 / EINT0 */
	};
};

&lradc {
	vref-supply = <&reg_ldo2>;

	status = "okay";

	button@158 {
		label = "Volume Down";
		linux,code = <KEY_VOLUMEDOWN>;
		channel = <0>;
		voltage = <158730>;
	};

	button@349 {
		label = "Volume Up";
		linux,code = <KEY_VOLUMEUP>;
		channel = <0>;
		voltage = <349206>;
	};

	button@1142 {
		label = "Esc";
		linux,code = <KEY_ESC>;
		channel = <0>;
		voltage = <1142856>;
	};
};

&mmc0 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins_a>, <&mmc0_cd_pin_reference_design>;
	vmmc-supply = <&reg_vcc3v3>;
	bus-width = <4>;
	cd-gpios = <&pio 7 1 GPIO_ACTIVE_HIGH>; /* PH01 */
	cd-inverted;
	status = "okay";
};

&pio {
	codec_pa_pin: codec_pa_pin@0 {
		allwinner,pins = "PH15";
		allwinner,function = "gpio_out";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};

	lcd_backlight_pin: lcd_backlight_pin@0 {
		allwinner,pins = "PH7";
		allwinner,function = "gpio_out";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};

	lcd_enable_pin: lcd_enable_pin@0 {
		allwinner,pins = "PH8";
		allwinner,function = "gpio_out";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};

	lcd_lvds0_pins: lcd_lvds0_pins@0 {
		allwinner,pins =  "PD0", "PD1", "PD2", "PD3", "PD4",
				  "PD5", "PD6", "PD7", "PD8", "PD9";
		allwinner,function = "lvds0";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};
};

&reg_dcdc2 {
	regulator-always-on;
	regulator-min-microvolt = <1000000>;
	regulator-max-microvolt = <1400000>;
	regulator-name = "vdd-cpu";
};

&reg_dcdc3 {
	regulator-always-on;
	regulator-min-microvolt = <1250000>;
	regulator-max-microvolt = <1250000>;
	regulator-name = "vdd-int-dll";
};

&reg_ldo1 {
	regulator-name = "vdd-rtc";
};

&reg_ldo2 {
	regulator-always-on;
	regulator-min-microvolt = <3000000>;
	regulator-max-microvolt = <3000000>;
	regulator-name = "avcc";
};

&reg_usb1_vbus {
	status = "okay";
};

&reg_usb2_vbus {
	status = "okay";
};


&uart0  {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins_a>;
	status = "okay";
};

&usbphy {
	usb1_vbus-supply = <&reg_usb1_vbus>;
	usb2_vbus-supply = <&reg_usb2_vbus>;
	status = "okay";
};
